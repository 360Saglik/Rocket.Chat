name: 'Meteor Docker'

inputs:
  CR_USER:
    description: ''
    required: true
  CR_PAT:
    description: ''
    required: true
  node-version:
    required: true
    description: 'Node version'
  platform:
    required: false
    description: 'Platform'

runs:
  using: composite

  steps:
    - name: Login to GitHub Container Registry
      if: (github.event.pull_request.head.repo.full_name == github.repository || github.event_name == 'release' || github.ref == 'refs/heads/develop')
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ inputs.CR_USER }}
        password: ${{ inputs.CR_PAT }}

    - name: Restore build
      uses: actions/download-artifact@v3
      with:
        name: build
        path: /tmp/build

    - name: Unpack build
      shell: bash
      run: |
        cd /tmp/build
        tar xzf Rocket.Chat.tar.gz
        rm Rocket.Chat.tar.gz

    - uses: dtinth/setup-github-actions-caching-for-turbo@v1

    - name: Setup NodeJS
      uses: ./.github/actions/setup-node
      with:
        node-version: ${{ inputs.node-version }}
        cache-modules: true
        install: true

    - run: yarn build
      shell: bash

    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container
        platforms: linux/amd64,linux/arm64

    - name: Build and push docker images
      shell: bash
      run: |
        cp apps/meteor/.docker/Dockerfile /tmp/build
        cp apps/meteor/.docker/Dockerfile.alpine /tmp/build

        targets=(monolith)

        if [[ '${{ inputs.platform }}' = 'alpine' ]]; then
          targets+=($SERVICES_PUBLISH)
        fi;

        if [[ ${{ matrix.platform }} == 'alpine' ]]; then export target_monolith_use_alpine=true; fi
        export repository_owner=$LOWERCASE_REPOSITORY
        export monolith_tag=$RC_DOCKER_TAG
        export tag=$DOCKER_TAG
        export registry=ghcr.io

        maybe_push=
        { [[ $GITHUB_EVENT_NAME == 'release' ]] || [[ ${{ github.event.pull_request.head.repo.full_name }} == $GITHUB_REPOSITORY ]] || [[ $GITHUB_REF == 'refs/heads/develop' ]]; } && maybe_push=--push

        docker buildx bake --print "${targets[@]}"
        docker buildx bake "${targets[@]}" $maybe_push
